-*-org-*-

List of critic2 examples
------------------------

To run these examples, you will need the data files (structures,
densities, etc.). You can download them from:

https://unioviedo-my.sharepoint.com/:u:/g/personal/oteroalberto_uniovi_es/EcdvUc4IYVJOo59cTMNYe6kBcLutgz77xNmmtWHy0kThWA

Uncompress the archive inside the examples/ subdirectory (creates
examples/data/).

* zhurova_tsirelson_srtio3

** Source: WIEN2k 
** System: SrTiO3 perovskite crystal
** Reference: Zhurova and Tsirelson, Acta Cryst. B (2002) 58, 567-575.

** Description

This example tries to reproduce and expand the results for the SrTiO3
perovskite in:

  Zhurova and Tsirelson, Acta Cryst. B (2002) 58, 567-575.

In contrast to the article, we use the LAPW densities (at the same
calculation parameters) directly, rather than using the calculated
structure factors and a multipolar model. The WIEN2k density and
struct files are provided in the data/ directory, as well as the
runwien input (.wien).

** table2.cri
Automatic search for the critical points of the electron density, and
calculation of the G(r), V(r), and H(r) energy densities at those
points, using the Kirzhnits approximation. 

** basin_shapes.cri
Three-dimensional representation of the atomic basins. Two plots are
made: just the atomic basins, and the same basins with the kinetic
energy density (gtf) color-mapped on the basin surface. 

** figure2.cri
Automatic search for all critical points of the density. Then,
three-dimensional plot of the topological graph (the density gradient
lines connecting atoms through bcps). Also, a three-dimensional
representation of the Sr basin using gradient paths. 

** figure3.cri
Search for critical points, then plots of electron density contours
combined with gradient lines on two different crystallographic planes:
(001) and (222). 

** figure5a.cri
Define the Thomas-Fermi potential energy density (vtf_kir) as a ghost
field, then calculate its critical points, and make the following
plots: a three-dimensional representation of the topological graph for
this field, and a contour plot with gradient lines on the (001) plane.

** figure5b.cri
Define the Thomas-Fermi kinetic energy density (gtf_kir) as a ghost
field, then calculate its critical points, and make the following
plots: a three-dimensional representation of the topological graph for
this field, and a contour plot with gradient lines on the (001) plane.

** figure6-7.cri
Calculate the deformation potential energy density and the deformation
kinetic energy density on the (110) plane. These quantities are
defined as the difference between the potential (kinetic) energy
density obtained using the self-consistent density and that those
obtained from the promolecular density (the sum of atomic
densities). Relief plots are used to present the data.

** more.cri
Locate all the critical points in the unit cell, then integrate the
atomic basin properties (charge and volume) using qtree.

* auto_simple_promolecular

** Source: none (internal density tables)
** System: pyrazole crystal at the experimental geometry
** Description 

This example (pyrazole.cri) shows how to use the automatic CP search
routine in a simple system: the pyrazole molecular crystal (72 atoms
in the unit cell) with the promolecular density (the sum of atomic
densities). The default automatic search fails to find all critical
points in this case, so an extended seeding strategy needs to be
used. The critical points are written to a obj file for visualization.

* nciplot_surf_kaolinite

** Source: Quantum ESPRESSO
** System: kaolinite surface (slab) with an adsorbed benzene molecule
** Reference: Johnson and Otero-de-la-Roza, J. Chem. Theory Comput. (2012) 8, 5124.
** Description

The input files (kaoben_hl.cri and kaoben_hb.cri) generate the
NCIplots for benzene adsorbed on both sides (hydrophilic and
hydrophobic) of a kaolinite surface slab. The plots are the same as in
figure 2 of:

  Johnson and Otero-de-la-Roza, J. Chem. Theory Comput. (2012) 8, 5124.

In both cases, the input should be run in two steps. In the first
step, the structure is read and the unit cell is written to an xyz
file. The user then should extract from this xyz the relevant
fragments (using, for instance, a program like avogadro). Those xyz
files are used in the subsequent nciplot run. For convenience, the xyz
files are provided, along with the self-consistent QE electron
density. 

The files generated by nciplot can be opened with vmd (File -> Load
visualization state...).

* electride_yt

** Source: Quantum ESPRESSO
** System: the K(cryptand-2.2.2) electride (CSD refcode GAVFIS)
** Reference: Dale, Otero-de-la-Roza, and Johnson, Phys. Chem. Chem. Phys. 16 (2014) 14584.
** Description

The K(cryptand-2.2.2) electride (refcode GAVFIS) from the above
reference. 

** GAVFIS10_yt.cri

The pseudo-electron density, the reconstructed valence electron
density, and the all-electron density (calcualted using critic2's
internal density tables) are used to integrated the atomic charges and
volumes, including the non-nuclear maximum in the crystal voids. This
is done using a grid integration method (Yu-Trinkle algorithm), and
takes several minutes. The positions of the non-nuclear maxima found
by YT are written to an obj file, and included into the CP list.

** GAVFIS10_promol.cri

The promolecular density is calculated on a grid with the same number
of points as the selfconsistent density from Quantum ESPRESSO, then
saved to a cube file. This data can be used to generate the plot in
Figure 5 using vmd.

* nciplot_thymine
** Source: Quantum ESPRESSO
** System: thymine crystal.
** Reference: Otero-de-la-Roza, Johnson, and Contreras-Garcia, Phys. Chem. Chem. Phys., 2012, 14, 12165-12172 
** Description

This example shows how to run an NCI plot in a simple molecular
crystal (thymine) using the electron density calculated with Quantum
ESPRESSO. 

** thymine_simple.cri

Calculate the NCI plots in the unit cell using fast Fourier transforms
of the original density. This is a simple and efficient way of
calculating all the NCIs in a periodic crystal. Subsequent
calculations are much faster as long as the grid doesn't change
(e.g. if you only change cutplot, etc.), because it reads the
checkpoint file for the nciplot (ncichk).

** thymine_xyz.cri

Extract fragments of the thymine crystal to xyz files. The fragments
include a snapshot of the unit cell with molecules completed using
atoms from neighboring cells (thymine_cell.xyz), all molecules in the
unit cell in separate xyz files (thymine_burst_*.xyz) and all
molecular pairs in the cell in separate xyz files
(thymine_pairs_*.xyz). These files can be used to focus on a specific
region in subsequent calls to nciplot.

** thymine_intra.cri

An NCIplot showing the hydrogen bonds within the same layer of
thymines. Corresponds to Figure 8b in the cited reference (with
a smaller nstep). 

** thymine_inter.cri

An NCIplot showing the weak interactions between thymine
layers. Corresponds to Figure 8c in the cited reference (with a
smaller nstep). 

* mols_gaussian
** Source: Gaussian wfn/wfx
** System: benzene, pyridine, and furan
** Description

Simple calculations and plots using Gaussian wfx/wfn wavefunctions.

** benzene.cri

Load the molecular structure for benzene and the wavefunction
contained in a Gaussian wfx file. Then, calculate the critical points
and write them to an obj file together with the periodic cell and the
molecular cell. Use pointprop to activate the calculation of the
kinetic, potential, and total energy densities at the critical
points. Finally, make a plot of the electron density contours with an
overlay of gradient lines.

** pyridine.cri

Same for pyridine.

** furan.cri

Same for furan.

** pyridine_relief.cri

A relief plot of the electron density in the molecular plane of
pyridine. 

** pyridine_homo.cri

A plot of the HOMO of the pyridine in the molecular plane. Uses the
numerical field modifier to select a particular molecular orbital from
the wfx file.

* mols_ep
** Source: Gaussian wfn/wfx
** System: benzene, pyridine, and furan
** Description

Simple calculations and plots using Gaussian cubes generated by
cubegen. 

** pyridine_plane.cri

Plot the electrostatic potential of pyridine with its gradient paths
(field lines) in the molecular plane of pyridine.

** pyridine_field.cri

Plot the gradient paths of the electrostatic potential (field lines)
of pyridine in three dimensions. 

* npf2_phosphazene
** Source: WIEN2k and Quantum ESPRESSO.
** System: NPF2 phosphazene crystal.
** Description

Comparison of the densities obtained by WIEN2k (all-electron) and QE
(pseudopotentials) for the NPF2 crystal at the same geometry.

** npf2_cps.cri

Find the critical points of the WIEN2k electron density. Then,
calculate the value of the QE and WIEN2k densities at those points,
and their difference. Reprsent the critical points and the chemical
graph in three-dimensional plots.

** npf2_contours.cri

Write contour plots for the WIEN2k and QE densities and their
Laplacians. The Laplacian of the QE density is affected by aliasing
errors. 

** npf2_lap.cri

From the WIEN2k density, calculate the Laplacian and then find its
critical points.

* nciplot_molecule
** Source: Gaussian wfx.
** System: phenol dimer (gas-phase)
** Description

Running an NCI plot calculation in a molecule.

** phenol_phenol.cri

Run an nciplot calculation in phenol dimer, using a small molecular
cell.

* stm_gold_benzene
** Source: Quantum ESPRESSO.
** System: benzene adsorbed on a gold (111) surface.
** Description

Calculate and plot the STM image for benzene on gold (111).

** stm_gold_benzene.cri

Plot the STM image to a data file and write the gnuplot script. Run
gnuplot on the gnu file to generate the image.

* pi_catio3_example
** Source: aiPI version 7.
** System: CaTiO3 ideal perovskite.
** Description

Several tasks related to the analysis of an electron density for the
CaTiO3 perovskite crystal coming from a aiPI calculation.

** catio3_basins.cri

Plot the atomic basins with the Laplacian of the electron density
mapped on the basin surfaces.

** catio3_cps.cri

Find all the critical points and write them to an obj file.

** catio3_integrals.cri

Integrate the charge and the volume in the atomic densities using a
bisection algorithm.

** catio3_line.cri

Calculate the logarithm of the electron density along interatomic
lines. 

** catio3_qtree.cri

Calculate the atomic charges and volumes using the qtree algorithm.

* blind_test_ciftricks
** Source: n/a
** System: structures in the fifth blind test.
** Reference: Bardwell et al., Acta Cryst. (2011). B67, 535. (open access)
** Description

A compilation of the experimental structure and a subset of the
submitted structures for molecule XVI in the fifth blind test is
provided with this example. The input blind_test_writeall.cri reads
this compiled cif file, extracts all the structures, and writes them
to separate cif files. This input should be run before any of the
others. This example also shows the use of COMPARE to compare crystal
structures, and how to calculate powder diffraction patterns and
radial distribution functions with critic2.

** blind_test_writeall.cri

Read all the blocks in the provided cif file (all.cif) and separate
the structures into unique cif files. You should run this input before
the other two.

** blind_test_compare.cri

Compare all proposed crystal structures. To restrict to the comparison
with experiment, grep 'expt.cif' in the critic2 output. The DIFF value
for kendrick-1 compared to the experimental structure is higher than
any of the others. The match can be confirmed by inspecting the powder
diffraction patterns using the next input.

** blind_test_powder.cri

Plot the powder diffraction patterns for the experimental structure
and the three closest matches (kendrick-*.cif). Only kendrick-1.cif
actually matches the experiment, including reflection labels.

* vasp_covellite
** Source: VASP.
** System: the covellite mineral (CuS).
** Reference: Morales-García et al., J. Phys Chem. A. (2014) 118, 5823.
** Description

The data in Tables 2 and 3 of the cited reference is reproduced. The
VASP densities have been kindly provided by Ángel Morales-García. This
example shows how to calculate atomic charges and volumes and locate
critical points using VASP densities. Generating the AECCAR0 (core
density) and AECCAR2 (reconstructed valence density) requires using
the LAECHG=T flag in the INCAR file. These grids do not integrate to
the correct number of electrons, but they provide the correct basin
shapes, which is not always the case with the pseudo-density
(CHGCAR). 

** table2.cri

Reproduce some of the results in Table 2. Integrate the volumes and
charges at the equilibrium structure using the Yu-Trinkle algorithm.

** table3.cri

Reproduce the results in Table 3. Calculate the critical points of the
reconstructed all-electron density and write them to a graphics file
for visualization. 

* structures
** Source: n/a.
** System: zincblende, fluorite, MgO.
** Description

Use the crystallography tools in critic2 to build molecular and
crystal structures.

** library.cri

Load the zincblende (ZnS) structure from the library, then write
spherical particles at the crystal geometry with radii 20, 30, and 40
angstrom. Read the fluorite (CaF2) structure from the library and
write cubic particles with sides 20, 30, and 40 angstrom. Read the MgO
structure from the library and write QE template inputs with different
unit cells. Use NEWCELL to transform the conventional to the primitive
cell, then back to the conventional, then a 2x2x2 cubic supercell.

** identify.cri

Build the crystal structure of CdS (wurtzite phase) from scratch using
critic2's symmetry module and the non-equivalent crystallographic
coordinates for the two atoms. Then, extract a 20-angstrom-radius
spherical particle at the crystal geometry. All atoms in the generated
xyz are identified within the crystal (associated atoms and
crystallographic coordinates are found) using the IDENTIFY keyword.

* hf6_cycle
** Source: Gaussian wfx and Quantum ESPRESSO.
** System: cyclic HF hexamer (gas-phase).
** Description

A calculation of the cyclic planar HF hexamer with Gaussian, and the
same calculation using QE and a periodic supercell. Integration, basin
plotting, critical points, and more.

** hf6_grid_basins.cri

Plot the atomic basins of H and F using the QE reconstructed valence
density. 

** hf6_grid_integrals.cri

Calculate the atomic charges using the QE densities and the Yu-Trinkle
algorithm. 

** hf6_make_qe_supercell.cri

Read the structure from the wfx file and write it to a number of
different files including gas-phase (xyz, gjf) and periodic (espresso,
vasp, etc.) formats.

** hf6_wfx_bisection.cri

Calculate the atomic charges from the wfx file using bisection.

** hf6_wfx_cps.cri

Locate the critical points using the wfx file.

** hf6_wfx_plane.cri

Contour plot of the wfx electron density and gradient lines in the
molecular plane.

* grid_integration
** Source: VASP, abinit, and Quantum ESPRESSO.
** System: urea molecular crystal.
** Description

A guide for best practices regarding the integration of atomic volumes
and charges using grid methods. We discuss how to run this
calculations with the three mentioned codes (VASP, abinit, and QE). In
all cases, the integration should be run with the all-electron density
(from a PAW calculation) as the reference field and the pseudo-density
for the integrable field.

The reason is that the all-electron density should have the
interatomic surfaces at the correct positions, but it is the
pseudo-density who integrates to the correct number of electrons. The
pseudo-density can not be used to calculate the basins because of the
pseudopotential smoothing (sometimes atomic density peaks are missing
altogether). Reconstructed valence and all-electron densities can not
be used as the integrand (in general) because grids can not represent
accurately the density peaks near the cores.

A version in which only the pseudo-density is used, augmented with
critic2's core density tables ("poor man's integration") is also
shown, for cases in which the reconstructed density is not available
(e.g. a non-PAW calculation). Despite not being a completely sound
procedure, the results are very similar to those obtained using the
actual reconstructed all-electron density.

** vasp.cri

The calculation in VASP requires three files: the CHGCAR
(pseudo-density), the AECCAR0 (core density), and the AECCAR2
(reconstructed valence density). The sum of AECCAR0 and AECCAR2 is
used as reference, and the CHGCAR as integrable. The CHGCAR is
generated by default in VASP, whereas the AECCAR files require using
the LAECHG=T flag in the INCAR.

** abinit.cri

The abinit calculation requires the pseudo-density (_DEN, generated by
prtden = 1), and the reconstructed valence density (_PAWDEN). The flag
prtden = 2 writes both density files, but PAW datasets have to be
used to get a PAWDEN file.

** qe.cri

In Quantum ESPRESSO, the densities are generated as Gaussian cube
files by the post-process program (pp.x). To generate the
pseudo-density, use plot_num = 0. The reconstructed valence density
can only be generated if using PAW datasets, with plot_num
= 17. In versions of QE newer than 5.3.0, plot_num = 21 can be used to
plot the all-electron (core + valence) densities. 

If you do not have the reconstructed all-electron density, you need a
critic2 step previous to the integration in which you generate the
all-electron density by augmenting the reconstructed valence density
coming from pp.x using critic2's internal density tables, then save it
to a cube file. This pre-processing procedure takes at most a few
minutes, even for the largest systems.

* grid_cps
** Source: VASP, abinit, and Quantum ESPRESSO.
** System: urea molecular crystal.
** Description

A guide for best practices regarding the localization and
visualization of critical points with densities given on a grid.
Three codes (VASP, abinit, and QE) are used to calculate the
PAW-reconstructed density (valence in abinit and QE, all-electron in
VASP). Then, this density is used in AUTO and the critical poitns are
represented using the CPREPORT keyword. 

The all-electron density should be used for correcteness, if
available. The grid_auto.cri input in the grid_ammonia example shows
the effects of ignoring this recommmendation. However, if the
all-electron density is not available, e.g. if the calculation is not
run using the PAW formalism and hence no reconstruction is available,
the critical points in the interstitial (away from the nuclei) should
still be correctly determined.

For the purpose of finding critical points in a field given on a grid,
the tricubic interpolant (TRICUBIC keyword in LOAD and SETFIELD)
should always be used. This minimizes the oscillation in the
calculated first and second derivatives of the field, which is what
causes most of the problems during CP localization. However, these
oscillations may still appear when the topology is close to degenerate
(i.e. when some critical points are very close to other critical
points). An example of this is given by the qe.cri input, where there
is some clustering around a low-density bond critical point value. The
same effect can be observed for very low density critical points, and
the user should be prepared to examine the topology visually using the
CPREPORT keyword. In general, the critical points where the field has
a reasonably high value are reliably calculated. See the "Problems
finding critical points" section in the manual for more information.

The visualization of critical points is done using the CPREPORT
keyword. Many formats can be written, but the best way at present is
the cml format, that can be viewed using avogadro. Please, follow the
steps in the "Visualization of critical points" section of the manual
to have avogadro/openbable understand the critical points
types. Avogadro lets you identify particular critical points in the
system (the numerical identifier in avogadro is the same as in
critic2), calculate distances, and more. In addition, it has support
for crystals as well as molecules.

** vasp.cri

The sum of AECCAR0 (the core density) and AECCAR2 (the
PAW-reconstructed valence density) is used as reference for the
localization of critical points in the urea crystal. One ring CP near
the almost-degenerate low-density bcp is missing (see abinit density
for the complete topology, and the similar problems in qe.cri).

** abinit.cri

The reconstructed valence density from abinit (_PAWDEN) is
core-augmented using critic2's internal density tables. The flag
prtden = 2 writes both the PAWDEN and the DEN files, but PAW datasets
have to be used to get a PAWDEN file. All CPs are found, with Morse
sum zero.

** qe.cri

The reconstructed valence density generated using PAW datasets
(plot_num = 17) is core-augmented with critic2's internal density
tables. A cluster of spurious critical points is found near a bond
critical point that is close to degenerate but, other than that, the
topology is equivalent to the previous two examples. 

** icecake.cri

This example is a more complicated structure than the urea
crystal. The critical points are calculated in a slab
model composed of two graphene layers with some ice in between
them. There are two important differences with respect to the previous
examples. First, the seeding strategy is modified to search between
pairs of atoms (i.e. what critic2 does in molecules), instead of using
a recursive subdivision of the Wigner-Seitz cell in other
crystals. This is necessary to focus the CP localization algorithm on
the slab region. The second difference is that the the low-density
critical points which appear in the vacuum region are discarded using
the DISCARD keyword. 

There are two ways of loading the density from VASP: i) use the sum of
the AECCAR0 plus the AECCAR2, and ii) use critic2's internal density
tables to build the core. While the former is formally more correct,
the very steep density peaks at certain points in the grid will cause
the interpolant to generate some spurious maxima close to the nuclei
(but otherwise the topology will not be affected). If the second
option is used, then critic2 finds what looks like the complete
topology, with a Poincare-Hopf (Morse) sum of 1 (same as in a
molecule). 

The topology and the bond paths are written to cml and xyz files which
can be viewed using avogadro/openbabel (see "Visualization of critical
points" in the manual for how to make this work).

* grid_ammonia
** Source: Quantum ESPRESSO.
** System: ammonia molecular crystal.
** Description

A guide for the calculation of critical points in fields defined on a
grid, and some pointers regarding basin integration. In general, the
YT algorithm is superior to BADER in accuracy and efficiency. The only
downside is that it may be more memory consuming (both in disk and
core), but you would need a really huge grid to see any problem (or a
very slow disk). 

Regarding the location of critical points, the only reliable way of
avoiding spurious critical points caused by the pseudopotential
smoothing is to use the reconstructed valence density (most programs
that run PAW can write this) and then augment it with a core
contribution, calculated from critic2's internal density tables. Even
then, success is not guaranteed because there may be numerical noise
in the low-density regions.

** compare_yt_bader.cri

Calculate the integral of the electron density in the basins of the
electrostatic potential and the integral of the Laplacian in the
basins of the electron density. This is an accuracy test; see the
grid_integration example for the recommended procedure regarding
atomic basin integration for fields on a grid. The density in the
basins of the potential should integrate to a number of electrons
equal to the pseudopotential charge (5 for N and 1 for H). The
Laplacian in the basins of the density should integrate to zero. YT
achieves superior performance on both counts, with less walltime.

** grid_auto.cri

A study of the different possibilities for running the critical point
search in a grid field. We use: i) the pseudo-density (spurious CPs
caused by the pseudopotential smoothing at the N and H), ii)
core-augmented pseudo-density (spurious CPs at the H, because it is
not affected by core augmentation), iii) reconstructed valence density
(spurious CPs at the N), and iv) core-augmented reconstructed valence
(all-electron) density. The latter successfully finds all the critical
points and gives a CP topology that is homeomorphic with the
promolecular density, also calculated in this input.

* elk_quartz
** Source: elk.
** System: alpha-quartz at the experimental geometry.
** Description

An example of how to use elk densities and structures in critic2. Two
calculations have been run: one with default parameters and rkmax =
7.0 ("small") and one with rkmax = 9.0, lmaxvr = 14, lmaxapw = 14, and
gmaxvr = 24. Better parameters have less chances of showing spurious
CPs on the muffin tin surface caused by the density discontinuity but,
at the same time, they increase the unitary cost of the density
evaluation. The problem with the muffin discontinuity is showcased in
the second example (elk_issues.cri). These problems also affect WIEN2k
densities to a large extent.

** quartz_auto.cri

Read the crystal structure of alpha-quartz from elk's GEOMETRY.OUT and
the corresponding electron density from the STATE.OUT. Then, find all
the critical points and represent these points and the chemical graph
in 3d.

** elk_issues.cri

An example showing how spurious critical points caused by the density
discontinuity at the muffin tin surface may affect the location of
critical points and the tracing of gradient paths. In this particular
case, it is shown how a single gradient path is trapped by the
spurious CP manifold, and a line of the electron density is plotted
that goes through the affected region of space.

* pressure_density
** Source: abinit.
** System: elemental Ca (fcc).
** Reference: D. C. Fredrickson, J. Am. Chem. Soc. 134, 5991 (2012).
** Description

Calculate the components of the "chemical pressure" and make some
plots in elemental Ca (fcc) using abinit. Three structures are
calculated: equilibrium, compression (cell volume slightly smaller),
and expansion (cell volume slightly larger). This is done using 

scalecart1  3*1.005
scalecart2  3*1.00
scalecart3  3*0.995

in the abinit input. The required potential and energy density files
are generated using the prtpot (total potential, _POT), prtvha
(electrostatic potential, _VHA), prtvhxc (electrostatic + xc
potential, _VHXC), and prtkden (kinetic energy density, _KDEN). In
addition, the density (_DEN) is generated using the default prtden
flag. 

** make_pressure_cubes.cri

Read the grids generated by abinit and calculate the pressure
components and the total pressure on a grid. Write these quantities to
a cube file.

** plots_in_a_plane.cri

Using the cube files above, make several plots of the pressure on a
plane including one Ca atom.

* elf_basins
** Source: Gaussian wfx, abinit, VASP.
** System: gas-phase pyridine, urea molecular crystal, ice-packed graphene bilayer.
** Description

Calculate the ELF and integrate its attractor basins. Three examples
are provided: i) the ELF calculated by critic2 from a Gaussian wfx
file, ii) the integration of the ELF basins in the urea crystal, from the
ELF calculated by abinit, and iii) the integration of the charge
inside the ELF basins in a slab model of a graphene bilayer with
ice between the two layers (icecake).

** pyridine_elf_basins.cri

From the wfx file for a pyridine molecule, calculate the density and
the ELF in a cube file spanning the molecule, then integrate its
basins and plot the positions of the maxima

** pyridine_elf_colormap.cri

Plot the ELF from the pyridine wfx file on the molecular plane.

** urea_crystal_elf_basins.cri

Load the ELF and the density for the urea crystal calculated by
abinit, then integrate the ELF basins and represent the ELF maxima in
a three-dimensional plot.

** icecake.cri

Load the ELF and the density for the ice-filled graphene bilayer
("icecake"). Then, integrate the ELF basins and represent the ELF
maxima in a three-dimensional plot. The spurious ELF maxima in the
vacuum, caused by numerical noise, are discarded using the DISCARD
option to YT. All ELF maxima are found, together with two spurious
maxima that would probably disappear if one used a finer grid.

* visualization_cps
** Source: DFTB+ and Gaussian
** System: urea molecular crystal and the benzene molecule.
** Description

Two examples showing how to do critical point visualization using
critic2 to write CML files for avogadro. For this to work, you will
need to install a recent version of avogadro and openbabel from:

   http://avogadro.cc/wiki/Main_Page
   http://openbabel.org/wiki/Main_Page

In both cases, the critical points are calculated and written to a CML
files: one of the inputs is a molecule (HF6) and the other is a
molecular solid (urea).

** urea.cri

Calculate the critical points of in the urea solid (DFTB+ densities)
and write the structure and the critical points to a CML file, along
with the bond paths. Redundant atoms outside the unit cell and the
cell geometry are written, too.

** hf6.cri

Calculate the critical points in HF hexamers and write a CML file with
the atoms and the CP list. 

* cps_large
** Source: Gaussian wfn/wfx, quantum espresso
** System: a buckycatcher from the S12L (4_COMPLEX2), a buckycatcher from the S30L (12_di), a small nanotube, insulin, and a helicene crystal.
** Description

Calculations of the full topology in very large systems. See
visualization_cps and the manual for information on how to view the
cml files with avogadro. 

Most of the times the CP search requires some threshold tweaking to
get the complete topology in the system. Usually, by performing a
non-default seeding or by changing the distance criteria to discard
calculated CPs. In this context, the CHK keyword is very useful. When
the CHK keyword is used, all found critical points are written to a
checkpoint file. In subsequent runs, the checkpoint file is read and
new CPs are added to it. 

** 12_di.cri

A buckycatcher from the S30L set. By placing 3 seeds between each atom
pair, all critical points are found.

** 4_COMPLEX.cri

A buckycatcher from the S12L set. By placing 3 seeds between each atom
pair, all critical points are found.

** tube_6_4.cri

A small section of a (6,4) carbon nanotube. The points at the center
of the tube are almost degenerate, so the EPSDEGEN keyword needs to be
used to get them, along with a restriction on the encompassing unit
cell to prevent the very similar spurious critical points in the
vacuum region.

** insulin.cri

The human insulin hormone. This protein is a very large system,
containing 778 atoms, and it may take a while to run (~1 hour or more,
depending on the number of available processors). The full topology is
found by placing 3 seeds between each atom pair. 

** helicene-07.cri

A helicene crystal. Given the molecular nature of this system, the
seeding strategy is changed from the default (a subdivision of the
Wigner-Seitz celll) to a search over atomic pairs, in a manner similar
to what is done in molecules. Some CPs missing.

* ghost_cps
** Source: Gaussian wfn/wfx
** System: pyridine
** Description

This example shows how to calculate the topology of arbitrary scalar
functions, for which no analytical derivatives are available. Two
scalar properties (the ELF and the LOL) in pyridine are loaded and
the complete set of CPs found. The derivatives necessary for this task
are calcualted numerically (at a higher cost). A non-default seeding
strategy is required to found all critical points.

** pyridine_elf.cri

This example shows how to find the complete topology of the ELF in the
pyridine molecule.

** pyridine_lol.cri

This example shows how to find the complete topology of the LOL in the
pyridine molecule.

* dis_wannier
** Source: Quantum ESPRESSO
** System: several simple solids.
** Description

These five examples show how to calculate delocalization indices in
solids via maximally localized Wannier functions (MLWF), using the
method described in A. Otero-de-la-Roza et al. JCTC 14 (2018) 4699
(http://dx.doi.org/10.1021/acs.jctc.8b00549). Theis method uses a
recent version of Quantum ESPRESSO (6.3 or later) for the calculation
of the self-consistent Kohn-Sham states and wannier90 for the
transformation to MLWF. The calculations are carried out using a
sequence of steps that are specified in the runit.sh script inside
each subdirectory (which you will probably have to adapt to your
particular QE and wannier90 installation). In general, you need to:

1. Run a PAW SCF calculation.

2. Write the all-electron density to a cube file (rhoae.cube). This
   will be used to calcualte the Bader basins.

3. Run a norm-conserving SCF calculation. This needs to be run with
   wf_collect=.true. and the same ecutrho as step 1.

4. Calculate the pseudo- valence electron density (for consistency
   checks, not really needed).

5. Use open_grid.x to unpack the symmetry from the calculation and
   prepare the Wannier run (alternatively, use a non-selfconsistent
   calculation, see mgo-nscf).

6. Extract the KS coefficient, structure, and k-point mapping data to
   a pwc file using pw2critic.

7. Run wannier90 in the usual way to get the checkpoint file. In
   spin-polarized cases, this needs to be done twice, once for each
   spin component.

The pwc and chk files generated in steps 6 and 7 are read as a 
field in critic2 (see example cri files) and the calculation of the
DIs is activated using INTEGRABLE and the DELOC keyword. In output,
the localization indices as well as all interatomic DIs are given as a
function of distance from the reference atom. In molecular crystals,
molecular localization and delocalization indices are also calculated.

To run this example, you will need the pseudopotentials in the data/
directory, which can be downloaded with the fetch_data.sh script (and
possibly to modify you runit.sh script to point towards the location
of QE and wannier90). In all cases, sample output files (.cro) are
provided as well.

** mgo/

This is a basic calculation of the delocalization indices in MgO with
a 4x4x4 k-point grid using the current recommended procedure.

** mgo-nscf/

The same as the previous calculation, but using a non-SCF calculation
instead of open_grid.x to extract the individual KS information. This
is slower than the open_grid.x alternative.

** graph/

A slightly more complicated (and more expensive) calculation of
graphite with a 8x8x2 k-point grid. Here, the advantage of using MLWFs
can be seen very clearly. The DIs decay significantly more slowly with
distance in-plane than out-of-plane.

** urea/

An example of a DI calculation in a simple molecular crystal. critic2
automatically detects that the system is molecualr and groups the DIs
by molecules, although the interatomic DIs are still computed.

** feo/

An example of a spin-polarized DI calculation. This is slighly more
convoluted than the non-spin-polarized case because occupations need
to be fixed, and two wannier90 runs are required for the spin-minority
channel in order to "trick" wannier90 into not using the
disentanglement procedure.

